<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.daniloarcidiacono.test.ci</groupId>
    <artifactId>test-circle-ci</artifactId>
    <version>${revision}</version>
    <packaging>jar</packaging>
    <name>CI test project</name>
    <description>CI test project</description>
    <url>http://github.com/daniloarcidiacono/test-circle-ci</url>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Danilo Arcidiacono</name>
            <email>danilo.arcidiacono@gmail.com</email>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git@github.com:daniloarcidiacono/test-circle-ci.git</connection>
        <developerConnection>scm:git:git@github.com:daniloarcidiacono/test-circle-ci.git</developerConnection>
        <url>https://github.com/daniloarcidiacono/test-circle-ci.git</url>
    </scm>
    <issueManagement>
        <url>https://github.com/daniloarcidiacono/test-circle-ci</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <!-- Dependencies -->
        <junit.bom.version>5.2.0</junit.bom.version>
        <junit.platform.version>1.2.0</junit.platform.version>

        <!-- Plugins -->
        <maven-compiler.plugin.version>3.7.0</maven-compiler.plugin.version>
        <maven-surefire.plugin.version>2.22.0</maven-surefire.plugin.version>
        <flatten-maven.plugin.version>1.0.1</flatten-maven.plugin.version>
        <jacoco.plugin.version>0.8.2</jacoco.plugin.version>

        <!-- Constraints -->
        <!-- Note we use 2 d.p so that we get can any check failure messages reported to 2 d.p. -->
        <line.coverage.ratio>0.80</line.coverage.ratio>
        <branch.coverage.ratio>0.80</branch.coverage.ratio>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.bom.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Test runner -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire.plugin.version}</version>

                <!--

                    Workaround to run tests with OpenJDK 8

                        Could not find or load main class org.apache.maven.surefire.booter.ForkedBooter

                    https://stackoverflow.com/questions/53010200/maven-surefire-could-not-find-forkedbooter-class
                    https://issues.apache.org/jira/browse/SUREFIRE-1588

                    Also note that version 2.22.0 of surefire plugin is needed, which provides native support for JUnit Platform:

                        Could not find or load main class org.apache.maven.plugin.surefire.log.api.ConsoleLogger

                    https://github.com/junit-team/junit5/issues/1367
                -->
                <configuration>
                    <forkCount>0</forkCount>
                </configuration>
            </plugin>

            <!-- Test coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>

                    <!--
                        The check goal by default runs in the verify phase,
                         we want to fail the build if mimimum code coverage checks aren't met
                    -->
                    <execution>
                        <id>check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!-- Constraint on line and branch coverage of all classes -->
                                <rule>
                                    <element>CLASS</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${line.coverage.ratio}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${branch.coverage.ratio}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>

                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                This is needed to remove the ${revision} placeholder when executing the deploy phase
                https://blog.soebes.de/blog/2017/04/02/maven-pom-files-without-a-version-in-it/
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven.plugin.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>